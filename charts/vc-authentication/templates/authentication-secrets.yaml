{{- $existing := lookup "v1" "Secret" $.Release.Namespace .Values.authentication.generatePasswords.secretName }}

# Fetch fixed passwords from .Values.authentication. If empty, default to ""
{{- $fixedRootPass := .Values.authentication.mysqlRootPassword | default "" }}
{{- $fixedReplPass := .Values.authentication.mysqlReplicationPassword | default "" }}
{{- $fixedUserPass := .Values.authentication.mysqlPassword | default "" }}

{{- if .Values.authentication.generatePasswords.enabled }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.authentication.generatePasswords.secretName }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{ include "vcauthentication.labels" . | nindent 4 }}
data:
  # Logic for mysql-root-password
  mysql-root-password:
    {{- if $fixedRootPass }}
      {{ $fixedRootPass | b64enc | quote }}
    {{- else if $existing }}
      {{ index $existing.data "mysql-root-password" | quote }}
    {{- else }}
      {{ randAlphaNum 30 | b64enc | quote }}
    {{- end }}
    
  # Logic for mysql-replication-password
  mysql-replication-password:
    {{- if $fixedReplPass }}
      {{ $fixedReplPass | b64enc | quote }}
    {{- else if $existing }}
      {{ index $existing.data "mysql-replication-password" | quote }}
    {{- else }}
      {{ randAlphaNum 30 | b64enc | quote }}
    {{- end }}
    
  # Logic for mysql-password
  mysql-password:
    {{- if $fixedUserPass }}
      {{ $fixedUserPass | b64enc | quote }}
    {{- else if $existing }}
      {{ index $existing.data "mysql-password" | quote }}
    {{- else }}
      {{ randAlphaNum 30 | b64enc | quote }}
    {{- end }}
{{- end }}